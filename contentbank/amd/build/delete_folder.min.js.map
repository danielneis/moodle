{"version":3,"file":"delete_folder.min.js","sources":["../src/delete_folder.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to manage content bank folder actions, such as create, delete or rename.\n *\n * @module     core_contentbank/folders\n * @copyright  2022 Daniel Neis Araujo <danielneis@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Url from 'core/url';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Initialize delete folder form as SAVE_CANCEL form.\n *\n * @param {String} elementSelector\n * @param {Integer} contextId\n * @param {Integer} folderId\n */\nexport const initModal = (elementSelector, contextId, folderId) => {\n    const element = document.querySelector(elementSelector);\n    element.addEventListener('click', function(e) {\n        e.preventDefault();\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('deletefolder', 'contentbank'),\n            body:  getString('deletefolderconfirm', 'contentbank'),\n        })\n        .then(function(modal) {\n            modal.setSaveButtonText(getString('delete'));\n            var root = modal.getRoot();\n            root.on(ModalEvents.save, function() {\n                var request = {\n                    methodname: 'core_contentbank_delete_folder',\n                    args: {\n                        contextid: contextId,\n                        folderid: folderId\n                    }\n                };\n                Ajax.call([request])[0].then(function(data) {\n                    let params = {\n                        folderid: data.parentid,\n                        contextid: contextId\n                    };\n                    window.location.href = Url.relativeUrl('contentbank/index.php', params, false);\n                }).fail(Notification.exception);\n            });\n            modal.show();\n        });\n    });\n};\n"],"names":["elementSelector","contextId","folderId","document","querySelector","addEventListener","e","preventDefault","create","type","ModalFactory","types","SAVE_CANCEL","title","body","then","modal","setSaveButtonText","getRoot","on","ModalEvents","save","request","methodname","args","contextid","folderid","call","data","params","parentid","window","location","href","Url","relativeUrl","fail","Notification","exception","show"],"mappings":";;;;;;;0RAmCyB,CAACA,gBAAiBC,UAAWC,YAClCC,SAASC,cAAcJ,iBAC/BK,iBAAiB,SAAS,SAASC,GACvCA,EAAEC,wCACWC,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBC,OAAO,mBAAU,eAAgB,eACjCC,MAAO,mBAAU,sBAAuB,iBAE3CC,MAAK,SAASC,OACXA,MAAMC,mBAAkB,mBAAU,WACvBD,MAAME,UACZC,GAAGC,sBAAYC,MAAM,eAClBC,QAAU,CACVC,WAAY,iCACZC,KAAM,CACFC,UAAWxB,UACXyB,SAAUxB,yBAGbyB,KAAK,CAACL,UAAU,GAAGP,MAAK,SAASa,UAC9BC,OAAS,CACTH,SAAUE,KAAKE,SACfL,UAAWxB,WAEf8B,OAAOC,SAASC,KAAOC,aAAIC,YAAY,wBAAyBN,QAAQ,MACzEO,KAAKC,aAAaC,cAEzBtB,MAAMuB"}