{"version":3,"sources":["../src/folders.js"],"names":["define","$","Ajax","Notification","Str","Templates","Url","ModalFactory","ModalEvents","ACTIONS","CREATE_FOLDER","Folders","registerEvents","prototype","click","e","preventDefault","parentid","data","addButtonText","get_strings","key","component","then","langStrings","modalTitle","create","title","body","render","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","on","save","name","currentTarget","find","val","createFolder","hidden","destroy","show","catch","exception","requestType","call","methodname","args","get_string","message","params","parent","errormsg","window","location","href","relativeUrl"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to manage content bank folder actions, such as create, delete or rename.\n *\n * @module     core_contentbank/folders\n * @copyright  2020 Amaia Anabitarte <amaia@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n        'jquery',\n        'core/ajax',\n        'core/notification',\n        'core/str',\n        'core/templates',\n        'core/url',\n        'core/modal_factory',\n        'core/modal_events'],\nfunction($,\n         Ajax,\n         Notification,\n         Str,\n         Templates,\n         Url,\n         ModalFactory,\n         ModalEvents\n) {\n\n    /**\n     * List of action selectors.\n     *\n     * @type {{CREATE_FOLDER: string}}\n     */\n    var ACTIONS = {\n        CREATE_FOLDER: '[data-action=\"createfolder\"]',\n    };\n\n    /**\n     * Folders class.\n     */\n    var Folders = function() {\n        this.registerEvents();\n    };\n\n    /**\n     * Register event listeners.\n     */\n    Folders.prototype.registerEvents = function() {\n        $(ACTIONS.CREATE_FOLDER).click(function(e) {\n            e.preventDefault();\n\n            var parentid = $(this).data('parentid');\n            var strings = [\n                {\n                    key: 'addnewfolder',\n                    component: 'core_contentbank'\n                },\n                {\n                    key: 'add',\n                    component: 'core_contentbank'\n                },\n            ];\n            var addButtonText = '';\n            Str.get_strings(strings).then(function(langStrings) {\n                var modalTitle = langStrings[0];\n                addButtonText = langStrings[1];\n                return ModalFactory.create({\n                    title: modalTitle,\n                    body: Templates.render('core_contentbank/newfolder', {'parentid': parentid}),\n                    type: ModalFactory.types.SAVE_CANCEL\n                });\n            }).then(function(modal) {\n                modal.setSaveButtonText(addButtonText);\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    // The action is now confirmed, sending an action for it.\n                    var name = $(e.currentTarget).find('#newname').val();\n                    return createFolder(name, parentid);\n                });\n\n                // Handle hidden event.\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    // Destroy when hidden.\n                    modal.destroy();\n                });\n\n                // Show the modal.\n                modal.show();\n                return;\n            }).catch(Notification.exception);\n        });\n    };\n\n    /**\n     * Create folder in the content bank.\n     *\n     * @param {string} name The name for the new folder.\n     * @param {int} parentid The id of the parent folder.\n     */\n     function createFolder(name, parentid) {\n        var request = {\n            methodname: 'core_contentbank_create_folder',\n            args: {\n                name: name,\n                parentid: parentid\n            }\n        };\n\n        var requestType = 'success';\n        Ajax.call([request])[0].then(function(data) {\n            if (data) {\n                return Str.get_string('foldercreated', 'core_contentbank');\n            }\n            requestType = 'error';\n            return Str.get_string('duplicatedfoldername', 'core_contentbank');\n\n        }).then(function(message) {\n            var params = null;\n            if (requestType == 'success') {\n                params = {\n                    parent: parentid\n                };\n            } else {\n                params = {\n                    parent: parentid,\n                    errormsg: message\n                };\n            }\n            // Redirect to the main content bank page and display error message if exists.\n            window.location.href = Url.relativeUrl('contentbank/index.php', params, false);\n            return;\n        }).catch(Notification.exception);\n    }\n\n    return /** @alias module:core_contentbank/folders */ {\n        /**\n         * Initialise the unified user filter.\n         *\n         * @method init\n         * @return {Folders}\n         */\n        'init': function() {\n            return new Folders();\n        }\n    };\n});\n"],"file":"folders.min.js"}